from sprites import *


class PlaneGame(object):
    """主游戏类"""

    def __init__(self):
        print("游戏正在初始化...")
        # 创建游戏主窗口
        self.screen = pygame.display.set_mode(SCREEN_RECT.size)
        # 创建游戏时钟
        self.clock = pygame.time.Clock()
        # 调用私有方法，创建精灵和精灵组
        self.__create_sprites()

    def __create_sprites(self):
        """用于创建精灵和精灵组"""
        pass

    def __check_collide(self):
        """碰撞检测"""
        pass

    def __event_handler(self):
        """事件监听"""
        pass

    def __update_sprites(self):
        """位置更新"""
        self.background_group.update()
        self.background_group.draw(self.screen)

    def start_game(self):
        """启动游戏"""
        # 游戏主循环
        while True:
            # 设置刷新频率为60
            self.clock.tick(60)
            # 事件监听
            self.__event_handler()
            # 碰撞检测
            self.__check_collide()
            # 位置更新
            self.__update_sprites()
            # 游戏主窗口刷新显示
            self.display.update()

    @staticmethod
    def __game_over():
        """结束游戏"""
        print("游戏结束...")
        pygame.quit()
        exit()


class BackGround(GameSprite):
    """背景图像类，继承自 GameSprite"""
    def __init__(self, is_alt=False):
        # 调用父类的方法创建精灵对象
        super().__init__("./images/background.png")

        # 判断是否为背景图像2，若是则改变初始坐标位置
        if is_alt:
            self.rect.y = SCREEN_RECT.height

    def update(self):
        # 调用父类的方法向下移动
        super().update()
        if self.rect.y >= SCREEN_RECT.height:
            self.rect.y = -SCREEN_RECT.height


if __name__ == "__main__":
    # 初始化pygame
    pygame.init()
    # 创建游戏对象
    game = PlaneGame()
    # 启动游戏
    game.start_game()

